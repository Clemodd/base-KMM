[versions]
agp = "8.2.2"
## Laisser ces 3 lignes pour les versions de Kotlin
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.8.2"
compose = "1.6.2"
compose-plugin = "1.5.12"
decomposeVersion = "2.2.0-compose-experimental-beta02"
google = "2.0.0"
googlegmail = "v1-rev20220404-2.0.0"
googleoauth = "1.34.1"
jakarta = "2.0.1"
jakarta-api = "2.1.0"
jbcrypt = "0.4"
jupiter = "5.9.3"
koin = "3.3.3"
koin-ktor = "3.3.1"
kotlin = "1.9.22"
kottie = "1.4.3"
kover-version = "0.7.5"
kotlin-logging = "3.0.5"
kotlinx-coroutines = "1.7.3"
kotlinx-serialization = "1.6.0"
ksp = "1.9.22-1.0.17"
ktor = "2.3.7"
ktorcore = "3.6.0"
logback = "1.4.14"
maria = "2.7.4"
mockative = "2.0.1"
mockk = "1.13.4"
moko-mvvm = "0.16.1"
multiplatformStockage = "1.1.1"
mysql = "8.0.32"
retrofit = "2.9.0"
rx = "3.0.1"
slf = "2.0.7"
splash = "1.1.0-alpha02"

[libraries]
## AndroidX
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }

## Compose
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }

## Decompose
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decomposeVersion" }
decompose-dekstop = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "decomposeVersion" }

## Google
google-api-client = { module = "com.google.api-client:google-api-client", version.ref = "google" }
google-oauth-client-jetty = { module = "com.google.oauth-client:google-oauth-client-jetty", version.ref = "googleoauth" }
google-api-services-gmail = { module = "com.google.apis:google-api-services-gmail", version.ref = "googlegmail" }

## JakartaMail
jakarta-mail-api = { module = "jakarta.mail:jakarta.mail-api", version.ref = "jakarta-api" }
jakarta-mail = { module = "com.sun.mail:jakarta.mail", version.ref = "jakarta" }

## JBCrytp
jbcrypt = { module = "org.mindrot:jbcrypt", version.ref = "jbcrypt" }

## JUnit
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "jupiter" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jupiter" }

## Koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin-ktor" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }

## Kotlin
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlin-logging-jvm = { module = "io.github.microutils:kotlin-logging-jvm", version.ref = "kotlin-logging" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

## Kottie
kottie = { module = "io.github.ismai117:kottie", version.ref = "kottie" }

## Ktor
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-client-json", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-websocket = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktorm-core = { module = "org.ktorm:ktorm-core", version.ref = "ktorcore" }

## Log
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf" }

## Moko
moko-mvvm-core = { module = "dev.icerock.moko:mvvm-core", version.ref = "moko-mvvm" }
moko-mvvm-compose = { module = "dev.icerock.moko:mvvm-compose", version.ref = "moko-mvvm" }

##MockK et Mockative
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockative = { module = "io.mockative:mockative", version.ref = "mockative" }
mockative-processor = { module = "io.mockative:mockative-processor", version.ref = "mockative" }

## Retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }

## BDD
mysql-connector-j = { module = "com.mysql:mysql-connector-j", version.ref = "mysql" }
mariadb-java-client = { module = "org.mariadb.jdbc:mariadb-java-client", version.ref = "maria" }

##RxKotlin
rxkotlin = { module = "io.reactivex.rxjava3:rxkotlin", version.ref = "rx" }

## Multiplatform
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformStockage" } # Pour le stockage local des donn√©es

## SplashScreen
splashScreen = { module = "androidx.core:core-splashscreen", version.ref = "splash" }

## Server
tomcat = { module = "io.ktor:ktor-server-tomcat-jvm", version.ref = "ktor" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover-version" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }